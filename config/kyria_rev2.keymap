/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define _RSTHD 0
#define LRSTHD 1
#define RRSTHD 2
#define _NUMPQ 3
#define LNUMPQ 4
#define RNUMPQ 5
#define _NAVI 6

/ {
	keymap {
		compatible = "zmk,keymap";

		rsthd_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// | CTRL |  J  |  C  |  Y   |  F   |  K   |                                          |  Z   |  L    |  ,    |  U   |   Q   | CTRL |
// | TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   | RET  |
// | GUI  |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | R SHIFT | R SHIFT |  N   |  M    |  ,    |  .   |   /   | GUI  |
//                    | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
			bindings = <
	&kp LCTRL &kp J      &kp C &kp Y      &kp F    &kp K                                               &kp Z     &kp L    &kp COMMA &kp U    &kp Q   &kp RCTRL
	&kp TAB   &kp R      &kp S &kp T      &kp H    &kp D                                               &kp M     &kp N    &kp A     &kp I    &kp O   &kp ENTER
	&kp LGUI  &kp RS(N1) &kp V &kp G      &kp P    &kp B &none      &none          &none    &none      &kp X     &kp W    &kp DOT   &kp SEMI &kp SQT &kp RGUI
	                           &mo _NUMPQ &kp BSPC &kp E &mo LRSTHD &kp LALT       &kp RALT &mo RRSTHD &kp SPACE &kp DEL  &mo _NAVI
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};

		l_shift_rsthd_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// | CTRL |  J  |  C  |  Y   |  F   |  K   |                                          |  Z   |  L    |  ,    |  U   |   Q   | CTRL |
// | TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   | RET  |
// | GUI  |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | R SHIFT | R SHIFT |  N   |  M    |  ,    |  .   |   /   | GUI  |
//                    | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
			bindings = <
	&kp LS(LCTRL) &kp LS(J)    &kp LS(C) &kp LS(Y)  &kp LS(F)    &kp LS(K)                                                       &kp LS(Z)     &kp LS(L)    &kp LS(COMMA) &kp LS(U)    &kp LS(Q)   &kp LS(RCTRL)
	&kp LS(TAB)   &kp LS(R)    &kp LS(S) &kp LS(T)  &kp LS(H)    &kp LS(D)                                                       &kp LS(M)     &kp LS(N)    &kp LS(A)     &kp LS(I)    &kp LS(O)   &kp LS(ENTER)
	&kp LS(LGUI)  &kp LS(FSLH) &kp LS(V) &kp LS(G)  &kp LS(P)    &kp LS(B) &none      &none              &none        &none      &kp LS(X)     &kp LS(W)    &kp LS(DOT)   &kp LS(SEMI) &kp LS(SQT) &kp LS(RGUI)
	                                     &mo _NUMPQ &kp LS(BSPC) &kp LS(E) &mo LRSTHD &kp LS(LALT)       &kp LS(RALT) &mo RRSTHD &kp LS(SPACE) &kp LS(DEL)  &mo _NAVI
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};

		r_shift_rsthd_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// | CTRL |  J  |  C  |  Y   |  F   |  K   |                                          |  Z   |  L    |  ,    |  U   |   Q   | CTRL |
// | TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   | RET  |
// | GUI  |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | R SHIFT | R SHIFT |  N   |  M    |  ,    |  .   |   /   | GUI  |
//                    | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
			bindings = <
	&kp RS(LCTRL) &kp RS(J)    &kp RS(C) &kp RS(Y)  &kp RS(F)    &kp RS(K)                                                       &kp RS(Z)     &kp RS(L)   &kp RS(COMMA) &kp RS(U)    &kp RS(Q)   &kp RS(RCTRL)
	&kp RS(TAB)   &kp RS(R)    &kp RS(S) &kp RS(T)  &kp RS(H)    &kp RS(D)                                                       &kp RS(M)     &kp RS(N)   &kp RS(A)     &kp RS(I)    &kp RS(O)   &kp RS(ENTER)
	&kp RS(LGUI)  &kp RS(FSLH) &kp RS(V) &kp RS(G)  &kp RS(P)    &kp RS(B) &none      &none              &none        &none      &kp RS(X)     &kp RS(W)   &kp RS(DOT)   &kp RS(SEMI) &kp RS(SQT) &kp RS(RGUI)
	                                     &mo _NUMPQ &kp RS(BSPC) &kp RS(E) &mo LRSTHD &kp RS(LALT)       &kp RS(RALT) &mo RRSTHD &kp RS(SPACE) &kp RS(DEL) &mo _NAVI
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};

		num_pad_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// | CTRL |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   | CTRL |
// | TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   | RET  |
// | GUI  |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | R SHIFT | R SHIFT |  N   |  M    |  ,    |  .   |   /   | GUI  |
//                    | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
			bindings = <
	&kp LCTRL &kp F12 &kp F7 &kp F8     &kp F9    &kp LBKT                                              &kp GRAVE &kp N7  &kp N8 &kp N9 &kp EQUAL &kp RCTRL
	&kp TAB   &kp F10 &kp F4 &kp F5     &kp F6    &kp ESC                                               &none     &kp N4  &kp N5 &kp N6 &kp N0    &kp ENTER
	&kp LGUI  &kp F11 &kp F1 &kp F2     &kp F3    &kp RBKT &none      &none       &none     &none       &kp BSLH  &kp N1  &kp N2 &kp N3 &kp MINUS &kp RGUI
	                         &mo _NUMPQ &kp BSPC  &kp E    &mo LNUMPQ &kp LALT    &kp RALT  &mo RNUMPQ  &kp SPACE &kp DEL &mo _NAVI
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};

		l_shift_num_pad_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// | CTRL |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   | CTRL |
// | TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   | RET  |
// | GUI  |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | R SHIFT | R SHIFT |  N   |  M    |  ,    |  .   |   /   | GUI  |
//                    | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
			bindings = <
	&kp LS(LCTRL) &kp LS(F12) &kp LS(F7) &kp LS(F8) &kp LS(F9)    &kp LS(LBKT)                                                       &kp LS(GRAVE) &kp LS(N7)   &kp LS(N8) &kp LS(N9) &kp LS(EQUAL) &kp LS(RCTRL)
	&kp LS(TAB)   &kp LS(F10) &kp LS(F4) &kp LS(F5) &kp LS(F6)    &kp LS(ESC)                                                        &none         &kp LS(N4)   &kp LS(N5) &kp LS(N6) &kp LS(N3)    &kp LS(ENTER)
	&kp LS(LGUI)  &kp LS(F11) &kp LS(F1) &kp LS(F2) &kp LS(F3)    &kp LS(RBKT) &none      &none            &none         &none       &kp FSLH      &kp LS(BSLH) &kp LS(N2) &kp LS(N0) &kp LS(MINUS) &kp LS(RGUI)
	                                     &mo _NUMPQ &kp LS(BSPC)  &kp LS(E)    &mo LNUMPQ &kp LS(LALT)     &kp LS(RALT)  &mo RNUMPQ  &kp LS(SPACE) &kp LS(DEL) &mo _NAVI
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};

		r_shift_num_pad_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// | CTRL |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   | CTRL |
// | TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   | RET  |
// | GUI  |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | R SHIFT | R SHIFT |  N   |  M    |  ,    |  .   |   /   | GUI  |
//                    | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
			bindings = <
	&kp RS(LCTRL) &kp RS(F12) &kp RS(F7) &kp RS(F8) &kp RS(F9)    &kp RS(LBKT)                                                       &kp RS(GRAVE) &kp RS(N7)   &kp RS(N8) &kp RS(N9) &kp RS(EQUAL) &kp RS(RCTRL)
	&kp RS(TAB)   &kp RS(F10) &kp RS(F4) &kp RS(F5) &kp RS(F6)    &kp RS(ESC)                                                        &none         &kp RS(N4)   &kp RS(N5) &kp RS(N6) &kp RS(N3)    &kp RS(ENTER)
	&kp RS(LGUI)  &kp RS(F11) &kp RS(F1) &kp RS(F2) &kp RS(F3)    &kp RS(RBKT) &none      &none            &none         &none       &kp FSLH      &kp RS(BSLH) &kp RS(N2) &kp RS(N0) &kp RS(MINUS) &kp RS(RGUI)
	                                     &mo _NUMPQ &kp RS(BSPC)  &kp RS(E)    &mo LNUMPQ &kp RS(LALT)     &kp RS(RALT)  &mo RNUMPQ  &kp RS(SPACE) &kp RS(DEL) &mo _NAVI
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};

		navigation_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// | CTRL |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   | CTRL |
// | TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   | RET  |
// | GUI  |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | R SHIFT | R SHIFT |  N   |  M    |  ,    |  .   |   /   | GUI  |
//                    | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
			bindings = <
	&kp LCTRL &kp C_VOL_UP &kp HOME   &kp UP     &kp END    &kp PG_UP                                            &none     &none      &none      &none      &none &kp RCTRL
	&kp TAB   &kp C_VOL_DN &kp LEFT   &kp DOWN   &kp RIGHT  &kp PG_DN                                            &none     &none      &none      &none      &none &kp ENTER
	&kp LGUI  &kp C_MUTE   &kp C_PREV &kp C_PP   &kp C_NEXT &none &none     &none            &none    &none      &kp K_APP &bt BT_NXT &bt BT_CLR &bt BT_PRV &none &kp RGUI
	                                  &mo _NUMPQ &kp BSPC   &kp E &kp LSHFT &kp LALT         &kp RALT &kp RSHFT  &kp SPACE &kp K_APP  &mo _NAVI
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};
	};
};
