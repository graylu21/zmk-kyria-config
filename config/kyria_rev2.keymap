/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define _RSTHD 0
#define _NUMPQ 1
#define _NAVIG 2

/ {
    macros {
        exclame: exclame {
            label = "ZM_exclame";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_wait_time  16>
                , <&macro_press &kp LSHFT>
				, <&macro_tap &kp N1>
                , <&macro_release &kp LSHFT>
                ;
        };
    };
	behaviors {
        endpunc: end_punc {
            compatible = "zmk,behavior-mod-morph";
            label = "END_PUNC";
            #binding-cells = <0>;
            bindings = <&kp N1>, <&kp FSLH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        slashes: slashes {
            compatible = "zmk,behavior-mod-morph";
            label = "SLASHES";
            #binding-cells = <0>;
            bindings = <&kp BSLH>, <&kp FSLH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        onepipe: one_pipe {
            compatible = "zmk,behavior-mod-morph";
            label = "ONE_PIPE";
            #binding-cells = <0>;
            bindings = <&kp N1>, <&kp BSLH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        threeparen: three_paren {
            compatible = "zmk,behavior-mod-morph";
            label = "THREE_PAREN";
            #binding-cells = <0>;
            bindings = <&kp N3>, <&kp N0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        zerohash: zero_hash {
            compatible = "zmk,behavior-mod-morph";
            label = "ZERO_HASH";
            #binding-cells = <0>;
            bindings = <&kp N0>, <&kp N3>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
	keymap {
		compatible = "zmk,keymap";

		rsthd_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// | CTRL |  J  |  C  |  Y   |  F   |  K   |                                          |  Z   |  L    |  ,    |  U   |   Q   | CTRL |
// | TAB  |  R  |  S  |  T   |  H   |  D   |                                          |  M   |  N    |  A    |  I   |   O   | RET  |
// | GUI  |  !  |  V  |  G   |  P   |  B   |                                          |  X   |  W    |  .    |  ;   |   '   | GUI  |
//                           |NUMPQ | BKSP |    E    |   ALT   |  |  RSHFT  |  SPACE  | DEL  | NAVI  |
			bindings = <
	&kp LCTRL &kp J    &kp C &kp Y  &kp F      &kp K                                               &kp Z    &kp L     &kp COMMA &kp U    &kp Q   &kp RCTRL
	&kp TAB   &kp R    &kp S &kp T  &kp H      &kp D                                               &kp M    &kp N     &kp A     &kp I    &kp O   &kp ENTER
	&kp LGUI  &endpunc &kp V &kp G  &kp P      &kp B    &none  &none          &none     &none      &kp X    &kp W     &kp DOT   &kp SEMI &kp SQT &kp RGUI
	                    	 &none  &mo _NAVIG &kp BSPC &kp E  &kp LALT       &mo RSHFT &kp SPACE  &kp DEL  &mo _NUMPQ &none
			>;

			sensor-bindings = <&inc_dec_kp PG_DN PG_UP &inc_dec_kp C_VOL_DN C_VOL_UP>;
		};

		num_pad_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// | CTRL |  J  |  C  |  Y   |  F   |  K   |                                          |  Z   |  L    |  ,    |  U   |   Q   | CTRL |
// | TAB  |  R  |  S  |  T   |  H   |  D   |                                          |  M   |  N    |  A    |  I   |   O   | RET  |
// | GUI  |  !  |  V  |  G   |  P   |  B   |                                          |  X   |  W    |  .    |  ;   |   '   | GUI  |
//                           |NUMPQ | BKSP |    E    |   ALT   | |  RSHFT  |  SPACE  | DEL  | NAVI  |
			bindings = <
	&kp LCTRL &kp F12 &kp F7 &kp F8 &kp F9     &kp LBKT                                            &kp GRAVE &kp N7    &kp N8 &kp N9       &kp EQUAL  &kp RCTRL
	&kp TAB   &kp F10 &kp F4 &kp F5 &kp F6     &kp ESC                                             &none     &kp N4    &kp N5 &kp N6       &zero_hash &kp ENTER
	&kp LGUI  &kp F11 &kp F1 &kp F2 &kp F3     &kp RBKT  &none    &none       &none      &none     &slashes  &one_pipe &kp N2 &three_paren &kp MINUS  &kp RGUI
	                         &none  &mo _NAVIG &kp BSPC  &kp E    &kp LALT    &mo RSHFT  &kp SPACE &kp DEL   &mo _NUMPQ &none
			>;

			sensor-bindings = <&inc_dec_kp PG_DN PG_UP &inc_dec_kp C_VOL_DN C_VOL_UP>;
		};

		navigation_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// | CTRL |  J  |  C  |  Y   |  F   |  K   |                                          |  Z   |  L    |  ,    |  U   |   Q   | CTRL |
// | TAB  |  R  |  S  |  T   |  H   |  D   |                                          |  M   |  N    |  A    |  I   |   O   | RET  |
// | GUI  |  !  |  V  |  G   |  P   |  B   |                                          |  X   |  W    |  .    |  ;   |   '   | GUI  |
//                           |NUMPQ | BKSP |    E    |   ALT   | |  RRSTHD  |  SPACE  | DEL  | NAVI  |
			bindings = <
	&kp LCTRL &kp C_VOL_UP &kp HOME   &kp UP    &kp END    &kp PG_UP                                             &none       &none      &none      &none      &none &kp RCTRL
	&kp TAB   &kp C_VOL_DN &kp LEFT   &kp DOWN  &kp RIGHT  &kp PG_DN                                             &none       &none      &none      &none      &none &kp ENTER
	&kp LGUI  &kp C_MUTE   &kp C_PREV &kp C_PP  &kp C_NEXT &none     &none &none            &none      &none     &kp K_APP   &bt BT_NXT &bt BT_CLR &bt BT_PRV &none &kp RGUI
	                                  &none     &mo _NAVIG &kp BSPC  &kp E &kp LALT         &kp RSHFT  &kp SPACE &kp DEL     &mo _NUMPQ &none
			>;

			sensor-bindings = <&inc_dec_kp PG_DN PG_UP &inc_dec_kp C_VOL_DN C_VOL_UP>;
		};
	};
};
