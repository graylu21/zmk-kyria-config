/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define _RSTHD 0
#define _NUMPQ 1
#define _NAVIG 2

/ {
    macros {
        exclame: exclame {
            label = "ZM_exclame";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <16>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N1>,
                <&macro_release>,
                <&kp LSHFT>;
        };
        backword: back_word {
            label = "BACK_WORD";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <16>;
            bindings =
                <&macro_press &kp LCTRL>,
                <&macro_tap &kp LEFT &kp BSPC>,
                <&macro_release &kp LCTRL>;
        };
    };

    behaviors {
        endpunc: end_punc {
            compatible = "zmk,behavior-mod-morph";
            label = "END_PUNC";
            #binding-cells = <0>;
            bindings =
                <&exclame>,
                <&kp FSLH>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        slashes: slashes {
            compatible = "zmk,behavior-mod-morph";
            label = "SLASHES";
            #binding-cells = <0>;
            bindings =
                <&kp BSLH>,
                <&kp FSLH>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        bword: bword {
            compatible = "zmk,behavior-mod-morph";
            label = "BWORD";
            #binding-cells = <0>;
            bindings =
                <&kp BSPC>,
                <&backword>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        onepipe: one_pipe {
            compatible = "zmk,behavior-mod-morph";
            label = "ONE_PIPE";
            #binding-cells = <0>;
            bindings =
                <&kp N1>,
                <&kp BSLH>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        threeparen: three_paren {
            compatible = "zmk,behavior-mod-morph";
            label = "THREE_PAREN";
            #binding-cells = <0>;
            bindings =
                <&kp N3>,
                <&kp N0>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        zerohash: zero_hash {
            compatible = "zmk,behavior-mod-morph";
            label = "ZERO_HASH";
            #binding-cells = <0>;
            bindings =
                <&kp N0>,
                <&kp N3>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        jcut: j_cut {
            compatible = "zmk,behavior-mod-morph";
            label = "J_CUT";
            #binding-cells = <0>;
            bindings =
                <&kp J>,
                <&kp X>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        exall: ex_all {
            compatible = "zmk,behavior-mod-morph";
            label = "EX_ALL";
            #binding-cells = <0>;
            bindings =
                <&endpunc>,
                <&kp A>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        rsthd_layer {
    // ---------------------------------------------------------------------------------------------------------------------------------
    // | BKSP |  J  |  C  |  Y   |  F   |   K   |                                          |   Z   |  L    |  ,    |  U   |   Q   | DEL  |
    // | TAB  |  R  |  S  |  T   |  H   |   D   |                                          |   M   |  N    |  A    |  I   |   O   | RET  |
    // | CTRL |  !  |  V  |  G   |  P   |   B   |                                          |   X   |  W    |  .    |  ;   |   '   | GUI  |
    //                                  | NAVIG |    E    |   ALT   |  |  RSHFT  |  SPACE  | NUMPQ |

            bindings = <
    &bword      &jcut   &kp C   &kp Y   &kp F   &kp K                                               &kp Z   &kp L   &kp COMMA   &kp U       &kp Q   &kp DEL
    &kp TAB     &kp R   &kp S   &kp T   &kp H   &kp D                                               &kp M   &kp N   &kp A       &kp I       &kp O   &kp ENTER
    &kp LCTRL   &exall  &kp V   &kp G   &kp P   &kp B   &none   &none       &none      &none        &kp X   &kp W   &kp DOT     &kp SEMI    &kp SQT &kp RGUI
                                &none   &none   &mo 1   &kp E   &kp LALT    &kp RSHFT  &kp SPACE    &mo 2   &none   &none
            >;
        };

        num_pad_layer {
    // ---------------------------------------------------------------------------------------------------------------------------------
    // | BKSP | Vol+ | Home |  ↑  | End |  [    |                                          |   `   |  7    |  8   |  9   |   =   | DEL  |
    // | TAB  | Vol- |   ←  |  ↓  |  →  |  ESC  |                                          |       |  4    |  5   |  6   |   0   | RET  |
    // | CTRL | Mute |  ⏮️ | ⏯️  | ⏭️ |  ]    |                                          |   \   |  1    |  2   |  3   |   -   | GUI  |
    //                                  | NAVIG |    E    |   ALT   |  |  RSHFT  |  SPACE  | NUMPQ |

            bindings = <
    &bword      &kp C_VOL_UP    &kp HOME    &kp UP      &kp END     &kp LBKT                                                &kp GRAVE   &kp N7      &kp N8  &kp N9      &kp EQUAL   &kp DEL
    &kp TAB     &kp C_VOL_DN    &kp LEFT    &kp DOWN    &kp RIGHT   &kp ESC                                                 &none       &kp N4      &kp N5  &kp N6      &zerohash   &kp ENTER
    &kp LCTRL   &kp C_MUTE      &kp C_PREV  &kp C_PP    &kp C_NEXT  &kp RBKT    &none   &none       &none      &none        &slashes    &onepipe    &kp N2  &threeparen &kp MINUS   &kp RGUI
                                            &none       &none       &mo 1       &kp E   &kp LALT    &kp RSHFT  &kp SPACE    &tog 3      &none       &none
            >;
        };

        navigation_layer {
    // ---------------------------------------------------------------------------------------------------------------------------------
    // | BKSP |  J  |  C  |  Y   |   F   |  K   |                                          |  Z   |  L    |  ,    |  U   |   Q   | DEL  |
    // | TAB  |  R  |  S  |  T   |   H   |  D   |                                          |  M   |  N    |  A    |  I   |   O   | RET  |
    // | CTRL |  !  |  V  |  G   |   P   |  B   |                                          |  X   |  W    |  .    |  ;   |   '   | GUI  |
    //                                  | NAVIG |    E    |   ALT   |  |  RSHFT  |  SPACE  | NUMPQ |

            bindings = <
    &bword      &kp F12  &kp F7 &kp F8  &kp F9  &kp PG_UP                                               &none       &none         &none         &none           &none   &kp DEL
    &kp TAB     &kp F10  &kp F4 &kp F5  &kp F6  &kp PG_DN                                               &none       &none         &none         &none           &none   &kp ENTER
    &kp LCTRL   &kp F11  &kp F1 &kp F2  &kp F3  &none       &none   &none       &none       &none       &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &none   &kp RGUI
                                &none   &none   &tog 3      &kp E   &kp LALT    &kp RSHFT   &kp SPACE   &mo 2       &none         &none
            >;
        };

        GAMING_HOME {
            bindings = <
    &kp T    &kp TAB   &kp Q    &kp W   &kp E   &kp R                                       &none   &none   &none   &none   &none  &trans
    &kp G  &kp LSHFT   &kp A    &kp S   &kp D   &kp F                                       &none   &none   &none   &none   &none  &trans
    &kp V  &kp LCTRL   &kp Z    &kp X   &kp C   &kp V   &none       &none   &none   &none   &none   &none   &none   &none   &none  &trans
                                &none   &none   &mo 4   &kp SPACE   &mo 5   &none   &none   &tog 3  &none   &none
            >;
        };

        GAMING_NUM {
            bindings = <
    &kp ESC     &trans  &kp N7  &kp N8  &kp N9  &kp LEFT_BRACKET                                    &trans  &trans  &trans  &trans  &trans  &trans
    &kp MINUS   &trans  &kp N4  &kp N5  &kp N6  &kp N0                                              &trans  &trans  &trans  &trans  &trans  &trans
    &kp EQUAL   &trans  &kp N1  &kp N2  &kp N3  &kp RIGHT_BRACKET   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        GAMING_RIGHT {
            bindings = <
    &kp P       &trans  &kp O       &kp I   &kp U   &kp Y                                   &trans  &trans  &trans  &trans  &trans  &trans
    &kp SEMI    &trans  &kp L       &kp K   &kp J   &kp H                                   &trans  &trans  &trans  &trans  &trans  &trans
    &kp PERIOD  &trans  &kp COMMA   &kp M   &kp N   &kp B   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
